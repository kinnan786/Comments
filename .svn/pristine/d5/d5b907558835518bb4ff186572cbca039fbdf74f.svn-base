using System.Net.Http.Headers;
using System.Text;
using System.Web.Http;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Comments.Web
{
    public static class WebApiConfig
    {
        public static void Register(HttpConfiguration config)
        {
            config.Routes.MapHttpRoute("DefaultApi", "api/{controller}/{id}", new { id = RouteParameter.Optional }
                );

            var json = config.Formatters.JsonFormatter;
            json.SerializerSettings.PreserveReferencesHandling = PreserveReferencesHandling.Objects;
            // this line make sure the child objects can be returned
            json.SerializerSettings.NullValueHandling = NullValueHandling.Ignore;
            //json.SerializerSettings.ContractResolver = new AllPropertiesResolver();
            json.SerializerSettings.DateFormatHandling = DateFormatHandling.IsoDateFormat;
            json.SerializerSettings.DateParseHandling = DateParseHandling.DateTime;
            json.SerializerSettings.DateTimeZoneHandling = DateTimeZoneHandling.Local;
            json.SerializerSettings.Converters.Add(new IsoDateTimeConverter());
            //json.SerializerSettings.Converters.Add(new TimeSpanConverter());
            //json.SerializerSettings.Formatting = Newtonsoft.Json.Formatting.Indented;
            //json.SerializerSettings.TypeNameHandling = TypeNameHandling.Objects;
            //json.SerializerSettings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple;

            json.SupportedMediaTypes.Add(new MediaTypeHeaderValue("application/json"));
            json.SupportedEncodings.RemoveAt(0);

            json.SupportedEncodings.Add(Encoding.UTF32);
            json.SupportedEncodings.Add(Encoding.Unicode);
            json.SupportedEncodings.Add(Encoding.UTF8);


            config.Formatters.Remove(config.Formatters.XmlFormatter);


        }
    }
}